{"version":3,"sources":["SelectInstruments.js","GraphData.js","Manager.js","App.js","reportWebVitals.js","index.js"],"names":["SelectInstruments","state","selected","avaliableInstruments","fetch","then","res","json","locSel","Map","map","instrument","set","id","toString","setState","error","console","log","selectedItems","query","requestOptions","method","headers","body","JSON","stringify","this","fetchData","e","key","value","addInstrument","window","location","reload","target","name","checked","className","type","ticker","onChange","handleSelect","bind","Button","onClick","handleSubmit","Component","GraphData","myInstruments","activeInstrument","plotData","timeRange","transactions","inAction","nativeEvent","text","drowChart","fetchHistory","locA","handleRange","disabled","handleStartTrade","DropdownButton","title","Dropdown","Item","width","height","data","scope","transaction","createdAt","direction","oneItemCost","purchasedNumber","totalAmount","leftAmount","href","download","fetchDownload","variant","Manager","isSmthSelected","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e64ecfdc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nclass SelectInstruments extends Component {\r\n    state = {\r\n        selected: {},\r\n        avaliableInstruments: [],\r\n    }\r\n\r\n    fetchData() {\r\n        fetch(\"http://localhost:8081/instruments/clay/read-all/\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (res) => {\r\n              const locSel = new Map();\r\n              res.map(instrument => (\r\n                  locSel.set(instrument.id.toString(), false)\r\n              ));\r\n              this.setState({\r\n                  avaliableInstruments: res,\r\n                  selected: locSel\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                this.setState({\r\n                    avaliableInstruments: [],\r\n                    selected: {},\r\n                });\r\n            }\r\n          );\r\n    }\r\n\r\n    addInstrument(selectedItems) {\r\n        const query = 'http://localhost:8081/instruments/add-instruments/';\r\n        console.log('Запрос по ', selectedItems, query);\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: selectedItems\r\n        };\r\n        console.log(JSON.stringify({ selectedItems }));\r\n        fetch(query, requestOptions);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        let selectedItems = '';\r\n        for (var [key, value] of this.state.selected) {\r\n            console.log('Статус', key, value);\r\n            if (value) {\r\n                selectedItems += ',' + key;\r\n            }\r\n        }\r\n        this.addInstrument(selectedItems);\r\n        console.log(selectedItems);\r\n        window.location.reload();\r\n    }\r\n\r\n    handleSelect(e) {\r\n        const locSel = this.state.selected;\r\n        locSel.set(e.target.name, e.target.checked);\r\n        this.setState({\r\n            selected: locSel\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"selectDiv\">\r\n                <h2>Выберите инструменты, для работы</h2>\r\n                {this.state.avaliableInstruments.map(instrument => (\r\n                    <p key={instrument.id}>\r\n                        <label>\r\n                            <input type=\"checkbox\" name={instrument.ticker} onChange={this.handleSelect.bind(this)} />\r\n                            {instrument.ticker}\r\n                        </label>\r\n                    </p>\r\n                ))}\r\n                <Button onClick={this.handleSubmit.bind(this)}>Выбрать</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectInstruments;\r\n","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries} from 'react-vis';\r\nimport {DropdownButton, Dropdown, Button} from 'react-bootstrap';\r\nimport TimeRangePicker from '@wojtekmaj/react-timerange-picker';\r\n\r\n\r\nclass GraphData extends Component {\r\n\r\n  state = {\r\n      myInstruments: [],\r\n      activeInstrument: '',\r\n      plotData: [],\r\n      timeRange: [\"10:00\", \"18:00\"],\r\n      transactions: [],\r\n      inAction: false\r\n  }\r\n\r\n  handleSelect(e) {\r\n    console.log(e.nativeEvent.target.text);\r\n    this.setState({activeInstrument: e.nativeEvent.target.text});\r\n    this.drowChart(e.nativeEvent.target.text);\r\n    this.fetchHistory(e.nativeEvent.target.text);\r\n  }\r\n\r\n  drowChart(e){\r\n    fetch(\"http://localhost:8081/instruments/history/read-by-name/\" + e)\r\n    .then(res => res.json())\r\n    .then(\r\n      (res) => {\r\n        console.log(res);\r\n        this.setState({plotData: res});\r\n      },\r\n      (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n              selected: false,\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  fetchHistory(e){\r\n    fetch(\"http://localhost:8081/instruments/read-select/?param=\"+e)\r\n    .then(res => res.json())\r\n    .then(\r\n      (res) => {\r\n        console.log(res);\r\n        this.setState({transactions: res});\r\n      },\r\n      (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            selected: false,\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  fetchData() {\r\n    fetch(\"http://localhost:8081/instruments/my/instruments/\")\r\n    .then(res => res.json())\r\n    .then(\r\n      (res) => {\r\n        console.log(res);\r\n        let locA = '';\r\n        res.map(instrument => (locA = instrument.name));\r\n        this.setState({\r\n          myInstruments: res,\r\n          activeInstrument: locA\r\n        });\r\n      },\r\n      (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n              selected: false,\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  fetchDownload(){\r\n    console.log(\"http://localhost:8081/instruments/load-csv/?param=\"+this.state.activeInstrument);\r\n    fetch(\"http://localhost:8081/instruments/load-csv/?param=\"+this.state.activeInstrument);\r\n  }\r\n\r\n  handleRange(e) {\r\n    this.setState({timeRange: e});\r\n    console.log(this.state.timeRange);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n      this.fetchData();\r\n      this.fetchHistory();\r\n\r\n  }\r\n\r\n  handleStartTrade(e) {\r\n    this.setState({inAction: true});\r\n    const timeRange = this.state.timeRange;\r\n    const requestOptions = {\r\n        method: 'POST',\r\n    };\r\n    fetch('http://localhost:8081/instruments/start-trading/?startTime=' + timeRange[0] + '&endTime=' + timeRange[1], requestOptions)\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div>\r\n              <TimeRangePicker value={this.state.timeRange} onChange={this.handleRange.bind(this)} />\r\n              <button disabled={this.state.inAction} onClick={this.handleStartTrade.bind(this)}>Запустить торги</button>\r\n              <DropdownButton id=\"dropdown-basic-button\" title={this.state.activeInstrument}>\r\n                {this.state.myInstruments.map(instrument => (\r\n                <Dropdown.Item key={instrument.id} onClick= {this.handleSelect.bind(this)}>{instrument.name}</Dropdown.Item>))}\r\n              </DropdownButton>\r\n              <XYPlot\r\n                width={1000}\r\n                height={300}>\r\n                <HorizontalGridLines />\r\n                <LineSeries\r\n                  data={this.state.plotData}/>\r\n                <XAxis />\r\n                <YAxis />\r\n              </XYPlot>              \r\n              <table className=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Время</th>\r\n                            <th scope=\"col\">Направление операции</th>\r\n                            <th scope=\"col\">Название инструмента</th>\r\n                            <th scope=\"col\">Цена за ед.</th>\r\n                            <th scope=\"col\">Количество инстр. в операции</th>\r\n                            <th scope=\"col\">Общая стоимость</th>\r\n                            <th scope=\"col\">Текущее значение инструментов</th>\r\n                            <th scope=\"col\">Осаток на счете</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.transactions.map(transaction => (\r\n                      <tr key={transaction.id}>\r\n                        <th scope=\"row\">{transaction.id}</th>\r\n                        <td>{transaction.createdAt}</td>\r\n                        <td>{transaction.direction}</td>\r\n                        <td>{transaction.instrument.name}</td>\r\n                        <td>{transaction.oneItemCost}</td>\r\n                        <td>{transaction.purchasedNumber}</td>\r\n                        <td>{transaction.oneItemCost * transaction.purchasedNumber}</td>\r\n                        <td>{transaction.totalAmount}</td>\r\n                        <td>{transaction.leftAmount}</td>\r\n                      </tr>\r\n                      ))}\r\n                        </tbody>\r\n                      </table>\r\n              <a href={\"http://localhost:8081/instruments/load-csv/?param=\"+this.state.activeInstrument} download>\r\n              <Button\r\n                    onClick= {this.fetchDownload.bind(this)}\r\n                    variant=\"primary\">Скачать\r\n                </Button>  \r\n                </a> \r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default GraphData;","import React, { Component } from 'react';\r\nimport SelectInstruments from './SelectInstruments.js'\r\nimport GraphData from './GraphData.js'\r\n\r\nclass Manager extends Component {\r\n\r\n  state = {\r\n      selected: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.isSmthSelected();\r\n  }\r\n\r\n  isSmthSelected() {\r\n        fetch(\"http://localhost:8081//instruments/my/instruments/\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (res) => {\r\n              if (res.length) {\r\n                this.setState({selected: true});\r\n              }\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                this.setState({\r\n                    selected: false,\r\n                });\r\n            }\r\n          );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.selected) {\r\n        return (<SelectInstruments />);\r\n    }\r\n    return (<GraphData />);\r\n  }\r\n}\r\n\r\nexport default Manager;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Manager from './Manager.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Manager />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}