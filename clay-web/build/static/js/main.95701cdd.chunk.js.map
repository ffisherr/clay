{"version":3,"sources":["SelectInstruments.js","TableGraph.js","DownloadButton.js","GraphData.js","Manager.js","App.js","reportWebVitals.js","index.js"],"names":["SelectInstruments","state","selected","avaliableInstruments","fetch","then","res","json","console","log","locSel","Map","map","instrument","set","id","toString","setState","error","instrumentId","method","this","fetchData","e","key","addInstrument","window","location","reload","target","name","checked","type","ticker","onChange","handleSelect","bind","onClick","handleSubmit","Component","TableGraph","transactions","fetchHistory","className","scope","transaction","createdAt","direction","oneItemCost","purchasedNumber","totalAmount","leftAmount","DownloadButton","fetchDownload","Button","variant","GraphData","myInstruments","activeInstrument","plotData","timeRange","nativeEvent","text","drowChart","value","handleRange","handleStartTrade","DropdownButton","title","Dropdown","Item","width","height","data","Manager","isSmthSelected","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95701cdd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\n\nclass SelectInstruments extends Component {\n    state = {\n        selected: {},\n        avaliableInstruments: [],\n    }\n\n    fetchData() {\n        fetch(\"http://localhost:8081/instruments/clay/read-all/\")\n          .then(res => res.json())\n          .then(\n            (res) => {\n                console.log(res);\n              const locSel = new Map();\n              res.map(instrument => (\n                  locSel.set(instrument.id.toString(), false)\n              ));\n              this.setState({\n                  avaliableInstruments: res,\n                  selected: locSel\n                });\n            },\n            (error) => {\n                console.log(error);\n                this.setState({\n                    avaliableInstruments: [],\n                    selected: {},\n                });\n            }\n          );\n    }\n\n    addInstrument(instrumentId) {\n        const query = 'http://localhost:8081/instruments/add-instrument/?name=' + instrumentId;\n        const requestOptions = {\n            method: 'POST',\n        };\n        fetch(query, requestOptions);\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    handleSubmit(e) {\n        for (var [key, value] of this.state.selected) {\n            if (value) {\n                this.addInstrument(key);\n            }\n        }\n        window.location.reload();\n    }\n\n    handleSelect(e) {\n        const locSel = this.state.selected;\n        locSel.set(e.target.name, e.target.checked);\n        this.setState({\n            selected: locSel\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Выберите инструменты, для работы</h2>\n                {this.state.avaliableInstruments.map(instrument => (\n                    <p key={instrument.id}>\n                        <label>\n                            <input type=\"checkbox\" name={instrument.ticker} onChange={this.handleSelect.bind(this)} />\n                            {instrument.ticker}\n                        </label>\n                    </p>\n                ))}\n                <button onClick={this.handleSubmit.bind(this)}>Выбрать</button>\n            </div>\n        );\n    }\n}\n\nexport default SelectInstruments;\n","import React, { Component } from 'react';\n\nclass TableGraph extends Component {\n\n    state = {\n        transactions: []\n    }\n  \n  \n    fetchHistory(){\n      fetch(\"http://localhost:8081/instruments/history/read-all/\")\n      .then(res => res.json())\n      .then(\n        (res) => {\n          console.log(res);\n          this.setState({transactions: res});\n        },\n        (error) => {\n            console.log(error);\n            this.setState({\n              selected: false,\n            });\n        }\n      );\n    }\n  \n    componentDidMount() {\n        this.fetchHistory();\n    }\n  \n    render() {\n        return (\n            <div>\n                \n                      <table className=\"table\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Дата</th>\n                            <th scope=\"col\">Направление операции</th>\n                            <th scope=\"col\">Название инструмента</th>\n                            <th scope=\"col\">Цена за ед.</th>\n                            <th scope=\"col\">Количество инстр. в операции</th>\n                            <th scope=\"col\">Общая стоимость</th>\n                            <th scope=\"col\">Текущее значение инструментов</th>\n                            <th scope=\"col\">Осаток на счете</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.transactions.map(transaction => (\n                      <tr key={transaction.id}>\n                        <th scope=\"row\">{transaction.id}</th>\n                        <td>{transaction.createdAt}</td>\n                        <td>{transaction.direction}</td>\n                        <td>{transaction.instrument.name}</td>\n                        <td>{transaction.oneItemCost}</td>\n                        <td>{transaction.purchasedNumber}</td>\n                        <td>{transaction.oneItemCost * transaction.purchasedNumber}</td>\n                        <td>{transaction.totalAmount}</td>\n                        <td>{transaction.leftAmount}</td>\n                      </tr>\n                      ))} \n                        </tbody>\n                      </table>\n                \n            </div>\n        );\n    }\n  }\n  \n  export default  TableGraph;","import React, { Component } from 'react';\nimport {Button} from 'react-bootstrap';\n\nclass DownloadButton extends Component {\n\n  \n    fetchDownload(){\n      fetch(\"http://localhost:8081/instruments//load-csv/\")\n      \n    }\n\n    componentDidMount() {\n        this.fetchDownload();\n    }\n  \n    render() {\n        return (\n            <div>\n                <Button\n                    variant=\"primary\">Скачать\n                </Button>                \n            </div>\n        );\n    }\n  }\n  \n  export default  DownloadButton;","import React, { Component } from 'react';\nimport TableGraph from './TableGraph';\nimport './styles.css';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries} from 'react-vis';\nimport {DropdownButton, Dropdown} from 'react-bootstrap';\nimport TimeRangePicker from '@wojtekmaj/react-timerange-picker';\nimport DownloadButton from './DownloadButton';\n\n\nclass GraphData extends Component {\n\n  state = {\n      myInstruments: [],\n      activeInstrument: '',\n      plotData: [],\n      timeRange: [\"10:00\", \"18:00\"]\n  }\n\n  handleSelect(e) {\n    console.log(e.nativeEvent.target.text);\n    this.setState({activeInstrument: e.nativeEvent.target.text});\n    this.drowChart(e.nativeEvent.target.text);\n\n  }\n\n  drowChart(e){\n    fetch(\"http://localhost:8081/instruments/history/read-by-name/\" + e)\n    .then(res => res.json())\n    .then(\n      (res) => {\n        console.log(res);\n        this.setState({plotData: res});\n      },\n      (error) => {\n          console.log(error);\n          this.setState({\n              selected: false,\n          });\n      }\n    );\n  }\n\n  fetchData() {\n    fetch(\"http://localhost:8081/instruments/my/instruments/\")\n    .then(res => res.json())\n    .then(\n      (res) => {\n        console.log(res);\n        this.setState({myInstruments: res});\n      },\n      (error) => {\n          console.log(error);\n          this.setState({\n              selected: false,\n          });\n      }\n    );\n  }\n\n  handleRange(e) {\n    this.setState({timeRange: e});\n    console.log(this.state.timeRange);\n  }\n\n\n  componentDidMount() {\n      this.fetchData();\n  }\n\n  handleStartTrade(e) {\n    const timeRange = this.state.timeRange;\n    const requestOptions = {\n        method: 'POST',\n    };\n    fetch('http://localhost:8081/instruments/start-trading/?startTime=' + timeRange[0] + '&endTime=' + timeRange[1], requestOptions)\n  }\n\n  render() {\n      return (\n          <div>\n              <TimeRangePicker value={this.state.timeRange} onChange={this.handleRange.bind(this)} />\n              <button onClick={this.handleStartTrade.bind(this)}>Запустить торги</button>\n              <DropdownButton id=\"dropdown-basic-button\" title={this.state.activeInstrument}>\n                {this.state.myInstruments.map(instrument => (\n                <Dropdown.Item key={instrument.id} onClick= {this.handleSelect.bind(this)}>{instrument.name}</Dropdown.Item>))}\n              </DropdownButton>\n              <XYPlot\n                width={1000}\n                height={300}>\n                <HorizontalGridLines />\n                <LineSeries\n                  data={this.state.plotData}/>\n                <XAxis />\n                <YAxis />\n              </XYPlot>              \n              <TableGraph />\n              <DownloadButton />\n          </div>\n      );\n  }\n}\n\nexport default GraphData;","import React, { Component } from 'react';\nimport SelectInstruments from './SelectInstruments.js'\nimport GraphData from './GraphData.js'\n\nclass Manager extends Component {\n\n  state = {\n      selected: false,\n  }\n\n  componentDidMount() {\n      this.isSmthSelected();\n  }\n\n  isSmthSelected() {\n        fetch(\"http://localhost:8081//instruments/my/instruments/\")\n          .then(res => res.json())\n          .then(\n            (res) => {\n              if (res.length) {\n                this.setState({selected: true});\n              }\n            },\n            (error) => {\n                console.log(error);\n                this.setState({\n                    selected: false,\n                });\n            }\n          );\n  }\n\n  render() {\n    if (!this.state.selected) {\n        return (<SelectInstruments />);\n    }\n    return (<GraphData />);\n  }\n}\n\nexport default Manager;","import React, { Component } from 'react';\nimport './App.css';\nimport Manager from './Manager.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Manager />\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}